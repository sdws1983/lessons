1
00:00:00,190 --> 00:00:11,379
Python 和
R 一样都是数据科学中常用的开源编程语言，


2
00:00:11,379 --> 00:00:14,070
此时您应该使用哪一种？


3
00:00:14,070 --> 00:00:16,540
您可能会期待围栏。


4
00:00:16,540 --> 00:00:20,630
嗯，这取决于答案的类型，但不是。


5
00:00:20,630 --> 00:00:25,560
我将确切地告诉您现在应该选择哪一个
。


6
00:00:25,560 --> 00:00:26,740
所以就这样吧。


7
00:00:26,740 --> 00:00:32,829
我问你一个问题，根据你的回答，
你就会知道该选择哪种语言。


8
00:00:32,829 --> 00:00:33,829
准备好？


9
00:00:33,829 --> 00:00:34,829
好的。


10
00:00:34,829 --> 00:00:38,300
那么您有很多编程
经验吗？


11
00:00:38,300 --> 00:00:46,510
没有，使用 R，有些使用 python，很多，再次使用 R，
我会解释。


12
00:00:46,510 --> 00:00:47,510
好的。


13
00:00:47,510 --> 00:00:52,670
问题是您关心美观的
可视化和图形吗？


14
00:00:52,670 --> 00:00:57,659
如果是，请选择 R。
您想要解决的问题怎么样？


15
00:00:57,659 --> 00:01:04,900
机器学习的东西，用Python，统计
学习R是你最好的选择。


16
00:01:04,900 --> 00:01:08,610
最后，您的大多数同事都
使用什么？


17
00:01:08,610 --> 00:01:09,640
用那个。


18
00:01:09,640 --> 00:01:12,020
啊啊，很高兴能把这件事从我的胸口说出来。


19
00:01:12,020 --> 00:01:16,990
现在，我们就可以结束这里并继续
我们的一天，但我想


20
00:01:16,990 --> 00:01:22,070
更多地解释一下这两种语言是什么
以及如何最好地使用它们。


21
00:01:22,070 --> 00:01:27,860
因为越来越多的问题不再是选择哪一种
，而是如何针对


22
00:01:27,860 --> 00:01:32,820
您的特定用例充分利用这两种编程语言
。


23
00:01:32,820 --> 00:01:38,280
因此，让我们从两者中稍老的一个开始
，即 Python。


24
00:01:38,280 --> 00:01:47,680
Python 于 1989 年发布，它是一种
通用的面向对象编程


25
00:01:47,680 --> 00:01:53,390
语言，
通过大量使用空格来强调代码的可读性


26
00:01:53,390 --> 00:01:59,050
，事实上它的流行程度仅次于 Java 和
C。


27
00:01:59,050 --> 00:02:03,580
有一些很棒的库支持
数据科学任务。


28
00:02:03,580 --> 00:02:07,890
例如，我们有 Numty。


29
00:02:07,890 --> 00:02:10,350
它实际上是 Numpy。


30
00:02:10,350 --> 00:02:16,580
Numpty是英国俚语，意思是白痴。


31
00:02:16,580 --> 00:02:17,870
麻木了！


32
00:02:17,870 --> 00:02:27,480
numty 用于大维数组，
然后用于数据操作，我们有 pandas。


33
00:02:27,480 --> 00:02:30,730
还有专门的深度
学习工具。


34
00:02:30,730 --> 00:02:37,230
所以你可以使用 TensorFlow 之类的东西。


35
00:02:37,230 --> 00:02:47,590
您经常会发现自己
在 Jupyter 笔记本中使用 Python。


36
00:02:47,590 --> 00:02:49,580
作为你的IDE


37
00:02:49,580 --> 00:02:57,360
现在让我们将其与 R 进行比较，R 已
针对统计分析和数据可视化进行了优化。


38
00:02:57,360 --> 00:03:03,640
所以它是在 1992 年晚些时候开发的。


39
00:03:03,640 --> 00:03:08,680
作为一个拥有复杂数据
模型和优雅的数据报告工具的丰富生态系统，


40
00:03:08,680 --> 00:03:14,580
通过综合 R 存档网络（也


41
00:03:14,580 --> 00:03:22,090
称为 CRAN）有数千个可用的包，这些东西是为了 深入的
分析任务。


42
00:03:22,090 --> 00:03:27,120
R 提供了各种各样的库和
工具，用于清理数据、创建


43
00:03:27,120 --> 00:03:29,520
可视化和训练深度学习
算法等。


44
00:03:29,520 --> 00:03:36,980
我们通常与 R studio 一起使用，这
是一个用于


45
00:03:36,980 --> 00:03:40,810
简化统计分析、可视化
和报告的集成开发环境。


46
00:03:40,810 --> 00:03:47,290
因此，R 和 Python 都是开源的，并得到
大型社区的支持，不断


47
00:03:47,290 --> 00:03:49,709
扩展其库和工具。


48
00:03:49,709 --> 00:03:54,989
实际上，最大的区别在于
它们的使用方式，正如我所提到的，它们


49
00:03:54,989 --> 00:03:59,620
主要用于统计分析，而
Python 提供了一种更通用的


50
00:03:59,620 --> 00:04:01,000
数据整理方法。


51
00:04:01,000 --> 00:04:07,200
您可以使用 R 进行客户行为分析，
然后可以使用 Python 构建面部


52
00:04:07,200 --> 00:04:09,270
识别应用程序。


53
00:04:09,270 --> 00:04:15,300
我首先说过，如果您没有
编程经验或有相当多的编程


54
00:04:15,300 --> 00:04:18,810
经验，那么总是更好的选择。


55
00:04:18,810 --> 00:04:25,120
如果你介于两者之间，那么 Python
会更容易上手，但那怎么可能呢？


56
00:04:25,120 --> 00:04:28,710
嗯，Python 是多用途的。


57
00:04:28,710 --> 00:04:35,380
它被认为是一种多用途语言。 与


58
00:04:35,380 --> 00:04:40,780
C++ 和 Java 非常相似，它具有
易于学习的可读语法。


59
00:04:40,780 --> 00:04:45,990
对于初学者程序员或具有类似语言经验的人来说，它被认为是一种很好的语言


60
00:04:45,990 --> 00:04:46,990
。


61
00:04:46,990 --> 00:04:53,400
另一方面，现在是由统计学家建立的，
并且很大程度上依赖于统计模型


62
00:04:53,400 --> 00:04:58,440
和专业化。


63
00:04:58,440 --> 00:05:00,370
专业分析。


64
00:05:00,370 --> 00:05:06,720
现在，新手只需使用几行代码就可以在几分钟内运行数据分析任务


65
00:05:06,720 --> 00:05:13,050
，但高级功能的复杂性
使得培养专业知识变得更加困难。


66
00:05:13,050 --> 00:05:18,080
现在需要记住一些其他注意事项
，它们都与数据具体相关


67
00:05:18,080 --> 00:05:21,250
。


68
00:05:21,250 --> 00:05:24,330
现在说到数据收集。


69
00:05:24,330 --> 00:05:28,729
因此，首先要实际收集数据
。


70
00:05:28,729 --> 00:05:35,120
Python 支持
逗号分隔值文件或


71
00:05:35,120 --> 00:05:37,160
来自网络的 JSON 的 CSP 文件的各种数据格式。


72
00:05:37,160 --> 00:05:42,820
相比之下，R 是专为数据分析师
从 Excel 和


73
00:05:42,820 --> 00:05:43,820
文本文件等导入数据而设计的。


74
00:05:43,820 --> 00:05:52,400
现在进行数据探索，您可以使用
PANDAS 库在几秒钟内过滤、排序和显示


75
00:05:52,400 --> 00:05:53,500
数据。


76
00:05:53,500 --> 00:05:58,170
如果您使用 Python，则 R
会针对统计分析进行优化。


77
00:05:58,170 --> 00:06:03,020
因此，您可以构建概率分布
或应用不同的统计模型。


78
00:06:03,020 --> 00:06:08,590
最后，数据建模也有一些差异
。


79
00:06:08,590 --> 00:06:13,460
Python 具有用于数据建模的库，如
Numpty 和 R。有时您必须依赖我所看到的


80
00:06:13,460 --> 00:06:18,160
R 核心功能之外的包
。


81
00:06:18,160 --> 00:06:20,930
最后，还有一件事，那就是可视化。


82
00:06:20,930 --> 00:06:27,590
通过可视化，R 具有明显的优势，其
基本图形模块使您可以


83
00:06:27,590 --> 00:06:30,520
轻松创建基本图表和绘图。


84
00:06:30,520 --> 00:06:35,910
您可以使用 ggplot2 绘制更高级的
图，例如带有回归线的复杂散点图，


85
00:06:35,910 --> 00:06:39,990
Python 有其优势。


86
00:06:39,990 --> 00:06:45,479
但事实上，大多数组织都使用
两种语言的组合。


87
00:06:45,479 --> 00:06:51,210
您可能会进行早期数据分析
和探索以及 R，然后


88
00:06:51,210 --> 00:06:53,729
在需要交付一些数据产品时切换到 Python。


89
00:06:53,729 --> 00:06:56,090
那么你应该使用哪个？


90
00:06:56,090 --> 00:06:57,090
两个都。


91
00:06:57,090 --> 00:07:00,740
您可能会同时使用两者。


92
00:07:00,740 --> 00:07:05,460
如果您以后想看到更多这样的视频
，请点赞并订阅。


93
00:07:05,460 --> 00:07:06,280
感谢您的观看。


